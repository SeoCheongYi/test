name: Java Compile and Run # 워크플로우 이름

on:
  push:
    branches:
      - main # main 브랜치에 푸시될 때 실행
    paths:
      - 'src/Main.java' # src/Main.java 파일 변경 시에만 실행 (선택 사항)
  workflow_dispatch: # 수동 실행 허용

jobs:
  build-and-run-java:
    runs-on: ubuntu-latest # 최신 Ubuntu 환경에서 실행

    steps:
      - name: Checkout repository # 1. 레포지토리 체크아웃
        uses: actions/checkout@v4

      - name: Set up JDK 17 # 2. Java 개발 환경 설정 (JDK 17 사용)
        uses: actions/setup-java@v4
        with:
          java-version: '17' # 사용할 Java 버전
          distribution: 'temurin' # Java 배포판 (Temurin 권장)
          # cache: 'maven' # 이 줄을 삭제합니다. 프로젝트가 Maven을 사용하지 않으면 필요 없습니다.

      - name: Compile Main.java # 3. Main.java 컴파일
        run: |
          # Main.java가 src/Main.java 경로에 있을 경우
          javac src/Main.java
          # 컴파일 후 src 디렉토리에 Main.class가 생성됩니다.
          ls src/ # 생성된 파일 확인

      - name: Run Main.class # 4. Main.class 실행 및 출력 확인
        run: |
          # 컴파일된 클래스 파일을 실행하기 위해 클래스패스를 설정합니다.
          # Main.class가 src 폴더 내에 있으므로, 현재 디렉토리에서 src 폴더를 클래스패스에 추가
          java -cp src Main
          # 예상 출력: hello자바

      - name: Upload Main.class as artifact # 5. Main.class 아티팩트로 업로드 (선택 사항)
        uses: actions/upload-artifact@v4
        with:
          name: compiled-java-class # 아티팩트 이름
          path: src/Main.class # 업로드할 파일 경로
          retention-days: 1 # 보존 기간
